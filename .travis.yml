dist: precise
language: python
sudo: false
env:
  global:
    - PYTHON_VERSION=3.6
  matrix:
    - TEST_ADD_STUDIES=False COVER_PACKAGE=qiita_db
    - TEST_ADD_STUDIES=True COVER_PACKAGE="qiita_pet qiita_core qiita_ware"
before_install:
  - redis-server --version
  - redis-server --port 7777 &
  - wget http://repo.continuum.io/miniconda/Miniconda3-4.3.31-Linux-x86_64.sh -O miniconda.sh
  - chmod +x miniconda.sh
  - ./miniconda.sh -b
  - export PATH=/home/travis/miniconda3/bin:$PATH
  # Downloading and setting up ascp for EBI testing
  - wget ftp://ftp.microbio.me/pub/qiita/ascp-install-3.5.4.102989-linux-64-qiita.sh -O ascp-install-3.5.4.102989-linux-64-qiita.sh
  - chmod +x ascp-install-3.5.4.102989-linux-64-qiita.sh
  - ./ascp-install-3.5.4.102989-linux-64-qiita.sh
install:
  # install a few of the dependencies that pip would otherwise try to install
  # when intalling scikit-bio
  - travis_retry conda create -q --yes -n qiita python=3.6 pip libgfortran numpy
  - source activate qiita
  - 'echo "backend: Agg" > ~/matplotlibrc'
  - pip install sphinx sphinx-bootstrap-theme nose-timer codecov Click
  - git clone https://github.com/nicolasff/webdis
  - pushd webdis
  - make
  - ./webdis &
  - popd
  - travis_retry pip install . --no-binary redbiom
  # loading redbiom with Qiita's test set
  # but first let's make sure redis is empty
  # following https://github.com/biocore/redbiom/blob/master/Makefile
  - export REDBIOM_HOST=http://127.0.0.1:7379
  - curl -s http://127.0.0.1:7379/FLUSHALL > /dev/null
  - redbiom --version
  - redbiom admin scripts-writable
  - redbiom admin create-context --name "qiita-test" --description "qiita-test context"
  - redbiom admin load-sample-metadata --metadata `pwd`/qiita_db/support_files/test_data/templates/1_19700101-000000.txt
  - redbiom admin load-sample-metadata-search --metadata `pwd`/qiita_db/support_files/test_data/templates/1_19700101-000000.txt
  - redbiom admin load-sample-data --table `pwd`/qiita_db/support_files/test_data/processed_data/1_study_1001_closed_reference_otu_table.biom --context qiita-test --tag 4
  - redbiom admin load-sample-data --table `pwd`/qiita_db/support_files/test_data/processed_data/1_study_1001_closed_reference_otu_table-for_redbiom_tests.biom --context qiita-test --tag 5
  - mkdir ~/.qiita_plugins
  - export REDBIOM_HOST=http://127.0.0.1:7379
  - cp $PWD/qiita_core/support_files/BIOM\ type_2.1.4.conf ~/.qiita_plugins/BIOM\ type_2.1.4\ -\ Qiime2.conf
  - touch ~/.bash_profile
  - ssh-keygen -t rsa -C "ssh test key" -f $PWD/qiita_ware/test/test_data/test_key -P ""
  - mv $PWD/qiita_ware/test/test_data/test_key.pub ~/.ssh/
  - ssh-keyscan localhost >> ~/.ssh/known_hosts
  - cat ~/.ssh/test_key.pub >> ~/.ssh/authorized_keys
  - scp -i $PWD/qiita_ware/test/test_data/test_key localhost:$PWD/qiita_ware/test/test_data/random_key $PWD/qiita_ware/test/test_data/random_key_copy
  # Install the biom plugin so we can run the analysis tests
  - wget https://data.qiime2.org/distro/core/qiime2-2017.12-py35-linux-conda.yml
  - travis_retry conda env create -q -n qtp-biom --file qiime2-2017.12-py35-linux-conda.yml
  - rm qiime2-2017.12-py35-linux-conda.yml
  - source activate qtp-biom
  - pip install https://github.com/qiita-spots/qiita_client/archive/master.zip
  - pip install https://github.com/qiita-spots/qtp-biom/archive/master.zip --process-dependency-links
  - export QIITA_SERVER_CERT=`pwd`/qiita_core/support_files/server.crt
  - source deactivate
  - source activate qiita
before_script:
  - qiita-env make --no-load-ontologies
  - qiita-test-install
  - qiita plugins update
script:
  # Some of the tests rely on the plugin system to complete successfuly.
  # Thus, we need a qiita webserver running to be able to execute the tests.
  - if [ ${TRAVIS_BRANCH} == "master" ] && [ ${TRAVIS_PULL_REQUEST} == "false" ]; then ./travis_ebi_setup.sh ; fi
  - export QIITA_CONFIG_FP=qiita_core/support_files/config_test.cfg
  - ls $QIITA_CONFIG_FP
  - qiita pet webserver --no-build-docs start &
  - sleep 5
  - QIITA_PID=$!
  - nosetests $COVER_PACKAGE --with-doctest --with-coverage --with-timer -v --cover-package=$COVER_PACKAGE -e 'test_submit_EBI_parse_EBI_reply_failure' -e 'test_full_submission'
  - kill $QIITA_PID
  - if [ ${TEST_ADD_STUDIES} == "True" ]; then test_data_studies/commands.sh ; fi
  - if [ ${TEST_ADD_STUDIES} == "True" ]; then all-qiita-cron-job; fi
  - flake8 qiita_* setup.py scripts/qiita*
  - qiita pet webserver
addons:
  postgresql: "9.5"
services:
  - redis-server
  - postgresql
after_success:
  - if [ ${TEST_ADD_STUDIES} == "False" ]; then codecov ; fi
